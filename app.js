// Generated by CoffeeScript 1.10.0

/*
 * App definition
 * @namespace Node
 * @module Node
 */

/*
 * @memberOf Node
 * @method app.definition
 */
var LocalStrategy, MongoStore, account, app, bodyParser, colors, comercio, compression, config, cookieParser, express, expressSession, favicon, find, glob, home, logger, models, mongodb, mongoose, passport, path, port, producto, user, users;

express = require('express');

path = require('path');

favicon = require('serve-favicon');

logger = require('morgan');

colors = require('colors');

glob = require('glob');

compression = require('compression');

cookieParser = require('cookie-parser');

bodyParser = require('body-parser');

config = require('./config');

mongodb = config.azure.mongodb;

console.log(mongodb);

models = glob.sync(config.root + './models/*.coffee');

models.forEach(function(model) {
  return require(model);
});

port = process.env.PORT || 3000;

app = express();

app.locals.moment = require('moment');

mongoose = require('mongoose');

mongoose.connect(mongodb);

app.set('views', path.join(__dirname, 'views'));

app.set('view engine', 'jade');

user = require('./models/userModel');

passport = require('passport');

LocalStrategy = require('passport-local').Strategy;

expressSession = require('express-session');

MongoStore = require('connect-mongo')(expressSession);

app.use(expressSession({
  secret: 'ToleranceSecretKey',
  resave: false,
  saveUninitialized: true,
  store: new MongoStore({
    mongooseConnection: mongoose.connection,
    ttl: 1 * 24 * 60 * 60
  })
}));

app.use(passport.initialize());

app.use(passport.session());

passport.use(new LocalStrategy(user.authenticate()));

passport.serializeUser(user.serializeUser());

passport.deserializeUser(user.deserializeUser());

app.use(compression());

app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));

app.use(logger('dev'));

app.use(bodyParser.json());

app.use(bodyParser.urlencoded({
  extended: false
}));

app.use(cookieParser());

app.use(express["static"](path.join(__dirname, 'public')));

home = require('./routes/index');

account = require('./routes/account');

users = require('./routes/users');

producto = require('./routes/producto');

comercio = require('./routes/comercio');

find = require('./routes/find');

app.use('/', home);

app.use('/account', account);

app.use('/users', users);

app.use('/producto', producto);

app.use('/comercio', comercio);

app.use('/find', find);

app.use(function(req, res, next) {
  var err;
  err = new Error('Not Found');
  err.status = 404;
  return next(err);
});

if (app.get('env') === 'development') {
  app.use(function(err, req, res, next) {
    console.log(err.status);
    res.status(err.status || 500);
    return res.render('error', {
      message: err.message,
      error: err
    });
  });
}

app.use(function(err, req, res, next) {
  res.status(err.status || 500);
  return res.render('error', {
    message: err.message,
    error: err
  });
});

app.once('listened', function() {
  var db;
  db = mongoose.connection;
  db.on('error', function(err) {
    return colors.red('connection error: ' + err);
  });
  return db.once('open', function(mdb) {
    return console.log(colors.cyan("we're connected to: " + db.name + ", on port: " + port));
  });
});

module.exports = app;
